buildscript {
  repositories {
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath 'com.bmuschko:gradle-docker-plugin:3.0.7'
    classpath 'gradle.plugin.com.patdouble:gradle-aws-ecr-plugin:0.1.4'
  }
}

apply plugin: 'base'
apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin
apply plugin: com.patdouble.gradle.awsecr.AwsecrPlugin

import com.bmuschko.gradle.docker.tasks.image.*


def AWS_ACCESS_KEY_ID = System.getenv("AWS_ACCESS_KEY_ID")
def AWS_SECRET_ACCESS_KEY = System.getenv("AWS_SECRET_ACCESS_KEY")

ext.repository = '038337692500.dkr.ecr.ap-southeast-1.amazonaws.com'    

build.dependsOn("createDockerfile")

task copyTar(type: Copy, dependsOn: ":${project.ext.imageSource}:build") {
    from project(":${project.ext.imageSource}").collect { it.tasks.withType(Tar) }
    into "$buildDir"
}

task createDockerfile(type: Dockerfile) {
    destFile = project.file("$buildDir/Dockerfile")
    from 'java'
    maintainer 'Hicham Medkouri "info@anaxo.io"'
    label version: "${version}"

    runCommand "apt-get update -y && apt-get install -y curl tar bash wget openssl"
    runCommand "wget --no-check-certificate https://github.com/jwilder/dockerize/releases/download/v0.3.0/dockerize-linux-amd64-v0.3.0.tar.gz"
    runCommand "tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.3.0.tar.gz"

    addFile "${project.ext.imageSource}-${version}.tar", '/'
    entryPoint "/usr/local/bin/dockerize","-timeout","30s","-wait", "tcp://neo4j:7687", "/${project.ext.imageSource}-${version}/bin/${project.imageSource}"
    exposePort project.imagePort        
}

task dockerBuildImage(type:DockerBuildImage, dependsOn: [createDockerfile, copyTar]) {
   group = 'docker'   
   inputDir = project.buildDir
   tag = "${project.repository}/${project.ext.imageName}:latest"
}

task dockerPushImage(type: DockerPushImage, dependsOn: dockerBuildImage) {   
   group = 'docker' 
   ext.repository = "https://${project.repository}"
   imageName = "${dockerBuildImage.tag}"
}
